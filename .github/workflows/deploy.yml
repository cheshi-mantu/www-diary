name: Deploy VitePress Site

on:
  push:
    branches:
      - main
  workflow_dispatch:
  
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        cd pages
        pwd
        npm add -D vitepress
        npm install

    - name: Build VitePress site
      run: |
        ls -lah
        npm run docs:build

    - name: Deploy to Server
      env:
        DEPLOY_KEY: ${{ secrets.LOL_DEPLOY_KEY }}
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
        SERVER_PATH: ${{ secrets.SERVER_PATH }}
      run: |
        cd pages/.vitepress
        # Set up SSH key
        echo "$DEPLOY_KEY" > deploy_key
        chmod 600 deploy_key
        pwd
        ssh -i deploy_key -o StrictHostKeyChecking=no $SERVER_HOST /bin/true > out.dat
        cat ./out.dat
        # Sync files to server
        rsync -avz -e "ssh -v -i deploy_key -o StrictHostKeyChecking=no" dist/ $SERVER_USER@$SERVER_HOST:$SERVER_PATH

        # Clean up
        rm deploy_key
    - name: Inform via telegram
      env:
        BOT_ID: ${{ secrets.TLG_BOT_ID }}
        BOT_SECRET: ${{ secrets.TLG_BOT_KEY }}
        CHAT_ID: ${{ secrets.TLG_CHAT_ID }}
        BACK_LINK: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        TEXT_TO_SEND: "üëå üèóÔ∏è We deployed all the changes to LOL site for via üöÄ"
      run: |
        TEXT_TO_SEND="${{ env.TEXT_TO_SEND }} ${{ env.BACK_LINK }}"
        curl -X POST "https://api.telegram.org/$BOT_ID$BOT_SECRET/sendMessage" --data "chat_id=${CHAT_ID}&text=${TEXT_TO_SEND}"
